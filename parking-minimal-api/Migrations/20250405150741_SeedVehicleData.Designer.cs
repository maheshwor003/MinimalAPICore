// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ParkingMinimalApi.AppContext;

#nullable disable

namespace parking_minimal_api.Migrations
{
    [DbContext(typeof(ParkingDBContext))]
    [Migration("20250405150741_SeedVehicleData")]
    partial class SeedVehicleData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("parkingapi")
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ParkingMinimalApi.Models.VehicleModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("LicensePlate")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime>("ParkingDate")
                        .HasMaxLength(100)
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Vehicles", "parkingapi");

                    b.HasData(
                        new
                        {
                            Id = new Guid("74ed1641-5568-4a27-b3e1-159be61daebe"),
                            Color = "Blue",
                            LicensePlate = "AB123CD",
                            Make = "Toyota",
                            Model = "Corolla",
                            ParkingDate = new DateTime(2023, 1, 1, 10, 30, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("f1f0d8e4-d285-4cc5-9038-8964c1726dd2"),
                            Color = "Red",
                            LicensePlate = "XY987ZT",
                            Make = "Honda",
                            Model = "Civic",
                            ParkingDate = new DateTime(2023, 2, 1, 15, 45, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("446b86c0-8b5f-4a3a-9f7a-e02569c0d70e"),
                            Color = "Blue",
                            LicensePlate = "AB123CD",
                            Make = "Toyota",
                            Model = "Corolla",
                            ParkingDate = new DateTime(2023, 1, 1, 10, 30, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = new Guid("84c3a691-81e6-49ad-8ecc-9a1ff59c334f"),
                            Color = "Red",
                            LicensePlate = "XY987ZT",
                            Make = "Honda",
                            Model = "Civic",
                            ParkingDate = new DateTime(2023, 2, 1, 15, 45, 0, 0, DateTimeKind.Utc)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
